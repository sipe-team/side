name: Deploy Storybook to Netlify

on:
  push:
    branches:
      - release/v1
    paths:
      - 'packages/**/src/**/*.stories.@(js|jsx|ts|tsx)'
      - '.storybook/**'
      - 'build.sh'
      - 'netlify.toml'
  pull_request:
    branches:
      - release/v1
    paths:
      - 'packages/**/src/**/*.stories.@(js|jsx|ts|tsx)'
      - '.storybook/**'
      - 'build.sh'
      - 'netlify.toml'
  workflow_dispatch:

jobs:
  deploy-netlify:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    container: pandoc/latex
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install mustache (to update the date)
        run: apk add ruby && gem install mustache
        
      - name: Install Node.js and pnpm
        run: |
          apk add --no-cache nodejs npm
          npm install -g pnpm@9.7.1
          
      - name: Creates output using existing build.sh
        run: sh ./build.sh
        
      - name: Copy .storybook folder to output
        run: cp -r .storybook output/
        
      - name: Install dependencies in output directory
        working-directory: ./output
        run: pnpm install --frozen-lockfile
        
      - name: Build Storybook in output directory
        working-directory: ./output
        run: pnpm build:storybook
        
      - name: Deploy to Netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=output/storybook-static --prod
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # 기존 레포 배포 유지
  deploy-backup-repo:
    name: Deploy to Backup Repository
    runs-on: ubuntu-latest
    container: pandoc/latex
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install mustache (to update the date)
        run: apk add ruby && gem install mustache
        
      - name: Creates output using existing build.sh
        run: sh ./build.sh
        
      - name: Copy .storybook folder to output
        run: cp -r .storybook output/
        
      - name: Push to backup repository
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.GH_TOKEN }}
          DESTINATION_USERNAME: "froggy1014"
          DESTINATION_REPO: "side-storybook"
        with:
          source-directory: "output"
          destination-github-username: ${{ env.DESTINATION_USERNAME }}
          destination-repository-name: ${{ env.DESTINATION_REPO }}
          user-email: ${{ secrets.EMAIL }}
          commit-message: ${{ github.event.commits[0].message || 'Manual deployment via workflow_dispatch' }}
          target-branch: main